let initial_resource = [100, 50, 50, 75, 100];
let cur_row = 14;
let cur_col = 5;
let cur_turn = 1;
let respawn_matrix = [
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0],
];
let locationlist = "gtpsjcnmwbfah012".split("");
let locationy = [169, 203, 244, 292, 352, 427, 524];
let locationx = [
    [278, 339, 400, 460, 521],
    [268, 334, 400, 465, 531],
    [255, 327, 400, 472, 544],
    [240, 320, 400, 479, 559],
    [221, 310, 400, 489, 578],
    [197, 298, 400, 501, 602],
    [165, 282, 400, 517, 634]
];
let roadblocky = [176, 197, 215, 232, 256, 274, 300, 325, 358, 388, 432, 470, 527]; // 184->175
let roadblockx = [
    [308, 367, 433, 492], //old: [306, 366, 434, 494],
    [293, 355, 382, 444, 507],
    [298, 363, 436, 502],
    [282, 352, 381, 449, 517],
    [287, 360, 440, 513],
    [265, 346, 378, 452, 534], //271 => 265, 526 => 534
    [276, 356, 444, 524],
    [257, 341, 375, 459, 543],
    [261, 350, 449, 538],
    [238, 331, 372, 466, 560],
    [242, 343, 457, 558],
    [216, 322, 368, 477, 584],
    [218, 335, 465, 582]
];
let location_emojis = {
    "g": "‚õΩ",
    "t": "üåÆ",
    "p": "üçù",
    "s": "ü•™",
    "j": "üßÉ",
    "c": "‚òï",
    "n": "üçπ",
    "m": "üé≠",
    "w": "üé°",
    "b": "üíÉ",
    "f": "üåº",

    "a": "‚úà",
    "h": "üè†",
    "0": "üå≤",
    "1": "üíç",
    "2": "üõç",

    "u": "üîº",
    "d": "üîΩ",
    "l": "‚óÄÔ∏è",
    "r": "‚ñ∂Ô∏è"
};
let denotations = {
    "g": "gas",
    "t": "taco",
    "p": "pasta",
    "s": "sandwich",
    "j": "juice",
    "c": "coffee",
    "n": "club",
    "m": "mask",
    "w": "fair",
    "b": "ballroom",
    "f": "flower",

    "a": "airplane",
    "h": "home",
    "0": "tree",
    "1": "ring",
    "2": "shopping",

    "u": "up",
    "d": "down",
    "l": "left",
    "r": "right"
};
let updates = {
    "g": [100, -4, -6, -8, -4],
    "t": [0, 56, -6, -8, -4],
    "p": [0, 56, -6, -8, -4],
    "s": [0, 36, 14, -8, -4],
    "j": [0, -4, 54, -8, -4],
    "c": [0, -4, 54, -8, -4],
    "n": [0, -4, 34, 32, -4],
    "m": [0, -4, -6, 52, -4],
    "w": [0, 16, 14, 32, -4],
    "b": [0, -14, -21, 92, -4],
    "f": [0, -4, -6, 92, -4],

    "a": [0, -4, -6, -18, -4],
    "h": [0, 0, 0, 0, 0],
    "0": [0, 0, 0, 0, 0],
    "1": [0, -4, -6, -8, -4],
    "2": [0, -4, -6, -8, -4],

    "u": [-10, -4, -6, -8, -4],
    "d": [-10, -4, -6, -8, -4],
    "l": [-10, -4, -6, -8, -4],
    "r": [-10, -4, -6, -8, -4]
};
let refill = ["gha", "tpswha", "sjcnwha", "nmwbfha"];
let negate_direction = {
    "u": "d",
    "d": "u",
    "l": "r",
    "r": "l"
}
let distance_matrix0 = [
    [13, 12, 11, 10, 9, 8, 7, 6, 6, 7, 8, 9, 10, 11, 12, 13],
    [12, 11, 10, 9, 8, 7, 6, 5, 5, 6, 7, 8, 9, 10, 11, 12],
    [11, 10, 9, 8, 7, 6, 5, 4, 4, 5, 6, 7, 8, 9, 10, 11],
    [10, 9, 8, 7, 6, 5, 4, 3, 3, 4, 5, 6, 7, 8, 9, 10],
    [9, 8, 7, 6, 5, 4, 3, 2, 2, 3, 4, 5, 6, 7, 8, 9],
    [8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8],
    [8, 7, 6, 5, 4, 3, 2, 0, 0, 2, 3, 4, 5, 6, 7, 8],
    [9, 8, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 7, 8, 9],
    [10, 9, 8, 7, 6, 5, 4, 4, 4, 4, 5, 6, 7, 8, 9, 10],
    [11, 10, 9, 8, 7, 6, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11],
    [12, 11, 10, 9, 8, 7, 6, 6, 6, 6, 7, 8, 9, 10, 11, 12],
    [13, 12, 11, 10, 9, 8, 7, 7, 7, 7, 8, 9, 10, 11, 12, 13],
    [14, 13, 12, 11, 10, 9, 8, 8, 8, 8, 9, 10, 11, 12, 13, 14]
];
let distance_matrix = [
    [13, 12, 11, 10, 9, 8, 7, 6, 6, 7, 8, 9, 10, 11, 12, 13],
    [12, 11, 10, 9, 8, 7, 6, 5, 5, 6, 7, 8, 9, 10, 11, 12],
    [11, 10, 9, 8, 7, 6, 5, 4, 4, 5, 6, 7, 8, 9, 10, 11],
    [10, 9, 8, 7, 6, 5, 4, 3, 3, 4, 5, 6, 7, 8, 9, 10],
    [9, 8, 7, 6, 5, 4, 3, 2, 2, 3, 4, 5, 6, 7, 8, 9],
    [8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8],
    [8, 7, 6, 5, 4, 3, 2, 1, 1, 2, 3, 4, 5, 6, 7, 8],
    [9, 8, 7, 6, 5, 4, 3, 3, 3, 3, 4, 5, 6, 7, 8, 9],
    [10, 9, 8, 7, 6, 5, 4, 4, 4, 4, 5, 6, 7, 8, 9, 10],
    [11, 10, 9, 8, 7, 6, 5, 5, 5, 5, 6, 7, 8, 9, 10, 11],
    [12, 11, 10, 9, 8, 7, 6, 6, 6, 6, 7, 8, 9, 10, 11, 12],
    [13, 12, 11, 10, 9, 8, 7, 7, 7, 7, 8, 9, 10, 11, 12, 13],
    [14, 13, 12, 11, 10, 9, 8, 8, 8, 8, 9, 10, 11, 12, 13, 14]
];
let distance_matrixl0 = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
];
let distance_matrixl = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
    [2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0],
];
let distance_matrixr0 = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
];
let distance_matrixr = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
    [0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 2, 2, 2, 2, 2, 2],
];
let distance_matrixu = [
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
];


let carx = [
    [270, 328, 387, 445, 503],
    [244, 305, 365, 426, 486, 547],
    [260, 323, 387, 450, 513],
    [231, 297, 363, 428, 494, 560],
    [249, 318, 387, 455, 524],
    [215, 287, 359, 432, 504, 576],
    [235, 311, 387, 462, 538],
    [196, 276, 356, 435, 515, 595],
    [218, 302, 387, 471, 555],
    [172, 262, 351, 440, 529, 619],
    [197, 292, 387, 481, 576],
    [142, 244, 345, 446, 547, 649],
    [169, 278, 387, 495, 604],
    [104, 220, 337, 454, 571, 688],
    [133, 260, 387, 513, 640],
];

// Facing left: carx
// Facing right: carx-13
// Facing up: only cary will be light blue
// Facinf down: cary and cary y- <4 will be blue
let cary = [
    154,
    180,
    184,
    212,
    219,
    251,
    261,
    297,
    312,
    355,
    377,
    428,
    460,
    523,
    571,
];

module.exports = { 
    initial_resource, 
    cur_row, 
    cur_col, 
    cur_turn, 
    respawn_matrix, 
    locationlist, 
    locationy, 
    locationx, 
    roadblocky, 
    roadblockx, 
    location_emojis, 
    denotations, 
    updates, 
    refill, 
    negate_direction,
    distance_matrix0,
    distance_matrix, 
    distance_matrixl0, 
    distance_matrixl,
    distance_matrixr0, 
    distance_matrixr,
    distance_matrixu,
    carx,
    cary
}
